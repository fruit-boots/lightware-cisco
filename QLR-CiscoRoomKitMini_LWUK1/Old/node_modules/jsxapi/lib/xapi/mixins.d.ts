import XAPI from '.';
import normalizePath from './normalizePath';
import { Listener, Path } from './types';
export declare class Listenable {
    xapi: XAPI;
    normalizePath: typeof normalizePath;
    on<T = any>(path: Path, listener: Listener<T>): import("./feedback").Registration;
    once<T = any>(path: Path, listener: Listener<T>): import("./feedback").Registration;
    off(): void;
}
export declare class Gettable {
    xapi: XAPI;
    normalizePath: typeof normalizePath;
    get<T = any>(path: Path): Promise<T>;
}
export declare class Settable {
    xapi: XAPI;
    normalizePath: typeof normalizePath;
    set(path: Path, value: number | string): Promise<unknown>;
}
export declare function mix(Base: any, ...Mixins: any[]): any;
