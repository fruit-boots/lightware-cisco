"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ws_1 = __importDefault(require("ws"));
var tsh_1 = __importDefault(require("./backend/tsh"));
var ws_2 = __importDefault(require("./backend/ws"));
var connect_1 = __importDefault(require("./connect"));
var ssh_1 = __importDefault(require("./transport/ssh"));
var tsh_2 = __importDefault(require("./transport/tsh"));
var ws_3 = __importDefault(require("./transport/ws"));
var xapi_1 = require("./xapi");
exports.XAPI = xapi_1.default;
function initBackend(opts) {
    var host = opts.host, port = opts.port, protocol = opts.protocol;
    switch (protocol) {
        case '':
        case 'ssh:': {
            var transport = ssh_1.default(opts);
            return new tsh_1.default(transport);
        }
        case 'tsh:': {
            var transport = tsh_2.default(host, port);
            return new tsh_1.default(transport);
        }
        case 'ws:':
        case 'wss:': {
            var createWebSocket = function (url, auth) {
                var ws = new ws_1.default(url, auth, {
                    followRedirects: true,
                    rejectUnauthorized: false,
                });
                return ws;
            };
            var transport = ws_3.default(createWebSocket, opts);
            return new ws_2.default(transport);
        }
        default:
            throw new Error("Invalid protocol: " + protocol);
    }
}
exports.connect = connect_1.default(initBackend, { protocol: 'ssh:' });
